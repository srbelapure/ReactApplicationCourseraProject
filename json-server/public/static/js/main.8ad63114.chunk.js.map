{"version":3,"sources":["components/LoadingComponent.js","shared/baseUrl.js","components/MenuComponent.js","components/HomeComponent.js","components/HeaderComponent.js","components/FooterComponent.js","components/ContactComponent.js","components/CommentForm.js","components/DishDetailComponent.js","components/AboutComponent.js","components/MainComponent.js","redux/ActionCreators.js","redux/ActionTypes.js","redux/dishes.js","redux/comments.js","redux/promotions.js","redux/leaders.js","redux/Forms.js","App.js","redux/configureStore.js","serviceWorker.js","index.js"],"names":["Loading","className","baseUrl","RenderMenuItem","dish","to","id","width","src","image","alt","name","Menu","props","menu","dishes","map","key","isLoading","errorMessage","errMess","active","RenderCard","item","in","transformProps","exitTransform","designation","description","Home","dishesLoading","dishesErrMess","promotion","promosLoading","promosErrMess","leader","leadersLoading","leadersErrMess","Header","state","isNavOpen","isModalOpen","toggleNav","bind","toggleModal","handleLogin","this","setState","event","alert","username","value","password","remember","checked","preventDefault","dark","expand","onClick","href","height","isOpen","navbar","outline","toggle","onSubmit","htmlFor","type","innerRef","input","check","color","Component","Footer","required","val","length","maxLength","len","minLength","isNumber","isNaN","Number","validEmail","test","Contact","handleSubmit","values","postFeedback","resetFeedbackForm","role","model","md","text","placeholder","validators","show","messages","size","offset","checkbox","select","textarea","rows","CommentForm","postComment","dishId","rating","author","comment","RenderDish","top","RenderComments","comments","Intl","DateTimeFormat","year","month","day","format","Date","parse","date","DishDetail","RenderLeader","leaders","lead","left","object","body","heading","About","title","Main","fetchDishes","fetchComments","fetchPromos","fetchLeaders","location","classNames","timeout","path","component","filter","featured","promotions","promo","exact","match","parseInt","params","commentsErrMess","withRouter","connect","dispatch","newComment","toISOString","fetch","method","JSON","stringify","headers","credentials","then","response","ok","error","Error","status","statusText","json","payload","addComment","catch","console","log","message","actions","reset","addDishes","addComments","promos","addPromos","addLeaders","feedback","Dishes","action","Comments","concat","Promotions","Leaders","InitialFeedback","firstname","lastname","telnum","email","agree","contactType","store","createStore","combineReducers","createForms","applyMiddleware","thunk","logger","App","Boolean","window","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8ad63114.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const Loading = () => {\r\n    return(\r\n        <div className=\"col-12\">\r\n            <span className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\"></span>\r\n            <p>Loading . . .</p>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\n/**\r\n * if a component is defined as default export component componentName, then while importing: import componentName from \"\"\r\n * if we only write export const componentName, then while importing: import {componentName} from \"\"\r\n */","export const baseUrl =\"http://localhost:3001/\"","import React from 'react'\r\nimport {\r\n  Card,\r\n  CardImg,\r\n  CardImgOverlay,\r\n  CardTitle,\r\n  Breadcrumb,\r\n  BreadcrumbItem\r\n} from 'reactstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport {Loading} from \"./LoadingComponent\"\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\n\r\nfunction RenderMenuItem ({dish}) {\r\n  return (\r\n    <Card>\r\n      <Link to={`/menu/${dish.id}`}>\r\n      <CardImg width='100%' src={baseUrl + dish.image} alt={dish.name} />\r\n      <CardImgOverlay>\r\n        <CardTitle>{dish.name}</CardTitle>\r\n      </CardImgOverlay>\r\n      </Link>\r\n    </Card>\r\n  )\r\n}\r\n\r\nconst Menu = props => {\r\n  const menu = props.dishes.dishes.map(dish => {\r\n    return (\r\n      <div key={dish.id} className='col-12 col-md-5 m-1'>\r\n        <RenderMenuItem dish={dish}/>\r\n      </div>\r\n    )\r\n  })\r\n\r\n  if(props.dishes.isLoading)\r\n{\r\n  return(\r\n    <div className=\"container\">\r\n        <div className=\"row\">            \r\n            <Loading />\r\n        </div>\r\n    </div>\r\n);\r\n}\r\nelse if(props.dishes.errorMessage){\r\n  return(\r\n    <div className=\"container\">\r\n        <div className=\"row\"> \r\n            <div className=\"col-12\">\r\n                <h4>{props.dishes.errMess}</h4>\r\n            </div>\r\n        </div>\r\n    </div>\r\n);\r\n}\r\nelse{\r\n return (\r\n  <div className='container'>\r\n    <div className='row'>\r\n      <Breadcrumb>\r\n        <BreadcrumbItem>\r\n          <Link to='/home'>Home</Link>\r\n        </BreadcrumbItem>\r\n        <BreadcrumbItem active>Menu</BreadcrumbItem>\r\n      </Breadcrumb>\r\n      <div className='col-12'>\r\n        <h3>Menu</h3>\r\n        <hr />\r\n      </div>\r\n    </div>\r\n    <div className='row'>{menu}</div>\r\n  </div>\r\n)\r\n }\r\n}\r\n\r\nexport default Menu\r\n","import React from 'react'\r\nimport {\r\n  Card,\r\n  CardImg,\r\n  CardText,\r\n  CardBody,\r\n  CardTitle,\r\n  CardSubtitle\r\n} from 'reactstrap'\r\nimport {Loading} from \"./LoadingComponent\"\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform } from 'react-animation-components';\r\n\r\nfunction RenderCard ({ item, isLoading, errMess }) {\r\n  if (isLoading) {\r\n    return <Loading />\r\n  } else if (errMess) {\r\n    return <h4>{errMess}</h4>\r\n  } else {\r\n    return (\r\n      <FadeTransform\r\n                in\r\n                transformProps={{\r\n                    exitTransform: 'scale(0.5) translateY(-50%)'\r\n                }}>\r\n          <Card>\r\n            <CardImg src={baseUrl + item.image} alt={item.name} />\r\n            <CardBody>\r\n              <CardTitle>{item.name}</CardTitle>\r\n              {item.designation ? (\r\n                <CardSubtitle>{item.designation}</CardSubtitle>\r\n              ) : null}\r\n              <CardText>{item.description}</CardText>\r\n            </CardBody>\r\n          </Card>\r\n      </FadeTransform>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nfunction Home (props) {\r\n  return (\r\n    <div className='container'>\r\n      <div className='row align-items-start'>\r\n        <div className='col-12 col-md m-1'>\r\n          <RenderCard item={props.dish} isLoading={props.dishesLoading} errMess={props.dishesErrMess}/>\r\n        </div>\r\n        <div className='col-12 col-md m-1'>\r\n          <RenderCard item={props.promotion} isLoading ={props.promosLoading} errMess={props.promosErrMess}/>\r\n        </div>\r\n        <div className='col-12 col-md m-1'>\r\n          <RenderCard item={props.leader} isLoading ={props.leadersLoading} errMess={props.leadersErrMess}/>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nexport default Home\r\n","import React, { Component } from 'react'\r\nimport { Nav, Navbar, NavbarBrand, NavbarToggler, Collapse, NavItem, Jumbotron,\r\n    Button, Modal, ModalHeader, ModalBody,\r\n    Form, FormGroup, Input, Label} from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nclass Header extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            isNavOpen: false,\r\n            isModalOpen : false\r\n        };\r\n        this.toggleNav=this.toggleNav.bind(this);\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleLogin = this.handleLogin.bind(this);\r\n    }\r\n\r\n    toggleNav(){\r\n        this.setState({\r\n            isNavOpen : !this.state.isNavOpen\r\n        });\r\n    }\r\n\r\n    toggleModal(){\r\n        this.setState({\r\n            isModalOpen : !this.state.isModalOpen\r\n        })\r\n    }\r\n\r\n    handleLogin(event) {\r\n        this.toggleModal();\r\n        alert(\"Username: \" + this.username.value + \" Password: \" + this.password.value\r\n            + \" Remember: \" + this.remember.checked);\r\n        event.preventDefault();\r\n\r\n    }\r\n\r\n  render () {\r\n    return (\r\n    <div>\r\n        {/** <> && </> --- this is short hand for react fragment but it isnt supported by some browsers */}\r\n        <Navbar dark expand='md'>\r\n        <div className='container'>\r\n            <NavbarToggler onClick={this.toggleNav} />\r\n            <NavbarBrand className='mr-auto' href='/'>\r\n            <img\r\n                src='assets/images/logo.png'\r\n                height='30'\r\n                width='41'\r\n                alt='Ristorante Con Fusion'\r\n            />\r\n            </NavbarBrand>\r\n            <Collapse isOpen={this.state.isNavOpen} navbar>\r\n            <Nav navbar>\r\n                <NavItem>\r\n                <NavLink className='nav-link' to='/home'>\r\n                    <span className='fa fa-home fa-lg'></span> Home\r\n                </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                <NavLink className='nav-link' to='/aboutus'>\r\n                    <span className='fa fa-info fa-lg'></span> About Us\r\n                </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                <NavLink className='nav-link' to='/menu'>\r\n                    <span className='fa fa-list fa-lg'></span> Menu\r\n                </NavLink>\r\n                </NavItem>\r\n                <NavItem>\r\n                <NavLink className='nav-link' to='/contactus'>\r\n                    <span className='fa fa-address-card fa-lg'></span> Contact Us\r\n                </NavLink>\r\n                </NavItem>\r\n            </Nav>\r\n            <Nav className=\"ml-auto\" navbar>\r\n                <NavItem>\r\n                    <Button outline onClick={this.toggleModal}><span className=\"fa fa-sign-in fa-lg\"></span> Login</Button>\r\n                </NavItem>\r\n            </Nav>\r\n            </Collapse>\r\n        </div>\r\n        </Navbar>\r\n        <Jumbotron>\r\n        <div className='container'>\r\n            <div className='row row-header'>\r\n            <div className='col-12 col-sm-6'>\r\n                <h1>Ristorante con Fusion</h1>\r\n                <p>\r\n                We take inspiration from the World's best cuisines, and create a\r\n                unique fusion experience. Our lipsmacking creations will tickle\r\n                your culinary senses!\r\n                </p>\r\n            </div>\r\n            </div>\r\n        </div>\r\n        </Jumbotron>\r\n        <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n            <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\r\n            <ModalBody>\r\n            <Form onSubmit={this.handleLogin}>\r\n                <FormGroup>\r\n                    <Label htmlFor=\"username\">Username</Label>\r\n                    <Input type=\"text\" id=\"username\" name=\"username\"\r\n                        innerRef={(input) => this.username = input} />\r\n                </FormGroup>\r\n                <FormGroup>\r\n                    <Label htmlFor=\"password\">Password</Label>\r\n                    <Input type=\"password\" id=\"password\" name=\"password\"\r\n                        innerRef={(input) => this.password = input}  />\r\n                </FormGroup>\r\n                <FormGroup check>\r\n                    <Label check>\r\n                        <Input type=\"checkbox\" name=\"remember\"\r\n                        innerRef={(input) => this.remember = input}  />\r\n                        Remember me\r\n                    </Label>\r\n                </FormGroup>\r\n                <Button type=\"submit\" value=\"submit\" color=\"primary\">Login</Button>\r\n            </Form>\r\n            </ModalBody>\r\n        </Modal>\r\n    </div>\r\n)\r\n  }\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Footer (props) {\r\n  return (\r\n    <div className='footer'>\r\n      <div className='container'>\r\n        <div className='row justify-content-center'>\r\n          <div className='col-4 offset-1 col-sm-2'>\r\n            <h5>Links</h5>\r\n            <ul className='list-unstyled'>\r\n              <li>\r\n                <Link to=\"/home\">Home</Link>\r\n              </li>\r\n              <li>\r\n                <Link to=\"/aboutus\">About Us</Link>\r\n              </li>\r\n              <li>\r\n                <Link to=\"/menu\">Menu</Link>\r\n              </li>\r\n              <li>\r\n                <Link to=\"contactus\">Contact Us</Link>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n          <div className='col-7 col-sm-5'>\r\n            <h5>Our Address</h5>\r\n            <address>\r\n              121, Clear Water Bay Road\r\n              <br />\r\n              Clear Water Bay, Kowloon\r\n              <br />\r\n              HONG KONG\r\n              <br />\r\n              <i className='fa fa-phone fa-lg'></i>: +852 1234 5678\r\n              <br />\r\n              <i className='fa fa-fax fa-lg'></i>: +852 8765 4321\r\n              <br />\r\n              <i className='fa fa-envelope fa-lg'></i>:{' '}\r\n              <a href='mailto:confusion@food.net'>confusion@food.net</a>\r\n            </address>\r\n          </div>\r\n          <div className='col-12 col-sm-4 align-self-center'>\r\n            <div className='text-center'>\r\n              {/**<a><i></i></a> */}\r\n              <a\r\n                className='btn btn-social-icon btn-google'\r\n                href='http://google.com/+'\r\n              >\r\n                <i className='fa fa-google-plus'></i>\r\n              </a>\r\n              <a\r\n                className='btn btn-social-icon btn-facebook'\r\n                href='http://www.facebook.com/profile.php?id='\r\n              >\r\n                <i className='fa fa-facebook'></i>\r\n              </a>\r\n              <a\r\n                className='btn btn-social-icon btn-linkedin'\r\n                href='http://www.linkedin.com/in/'\r\n              >\r\n                <i className='fa fa-linkedin'></i>\r\n              </a>\r\n              <a\r\n                className='btn btn-social-icon btn-twitter'\r\n                href='http://twitter.com/'\r\n              >\r\n                <i className='fa fa-twitter'></i>\r\n              </a>\r\n              <a\r\n                className='btn btn-social-icon btn-google'\r\n                href='http://youtube.com/'\r\n              >\r\n                <i className='fa fa-youtube'></i>\r\n              </a>\r\n              <a className='btn btn-social-icon' href='mailto:'>\r\n                <i className='fa fa-envelope-o'></i>\r\n              </a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className='row justify-content-center'>\r\n          <div className='col-auto'>\r\n            <p>© Copyright 2018 Ristorante Con Fusion</p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Footer\r\n","import React, { Component } from 'react'\r\nimport { Breadcrumb, BreadcrumbItem, Button, Label, Col, Row } from 'reactstrap'\r\n// import { LocalForm} from 'react-redux-form'\r\nimport { Control, Form,Errors } from 'react-redux-form'\r\nimport { Link } from 'react-router-dom'\r\n\r\nconst required = val => val && val.length\r\nconst maxLength = len => val => !val || val.length <= len\r\nconst minLength = len => val => val && val.length >= len\r\nconst isNumber = val => !isNaN(Number(val))\r\nconst validEmail = val => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val)\r\n\r\nclass Contact extends Component {\r\n  constructor (props) {\r\n    super(props)\r\n    this.state = {}\r\n\r\n    this.handleSubmit = this.handleSubmit.bind(this)\r\n  }\r\n\r\n  handleSubmit (values) {\r\n    // console.log('Current State is: ' + JSON.stringify(values))\r\n    // alert('Current State is: ' + JSON.stringify(values))\r\n    this.props.postFeedback(values)\r\n    this.props.resetFeedbackForm();\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <div className='container'>\r\n        <div className='row'>\r\n          <Breadcrumb>\r\n            <BreadcrumbItem>\r\n              <Link to='/home'>Home</Link>\r\n            </BreadcrumbItem>\r\n            <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n          </Breadcrumb>\r\n          <div className='col-12'>\r\n            <h3>Contact Us</h3>\r\n            <hr />\r\n          </div>\r\n        </div>\r\n        <div className='row row-content'>\r\n          <div className='col-12'>\r\n            <h3>Location Information</h3>\r\n          </div>\r\n          <div className='col-12 col-sm-4 offset-sm-1'>\r\n            <h5>Our Address</h5>\r\n            <address>\r\n              121, Clear Water Bay Road\r\n              <br />\r\n              Clear Water Bay, Kowloon\r\n              <br />\r\n              HONG KONG\r\n              <br />\r\n              <i className='fa fa-phone'></i>: +852 1234 5678\r\n              <br />\r\n              <i className='fa fa-fax'></i>: +852 8765 4321\r\n              <br />\r\n              <i className='fa fa-envelope'></i>:{' '}\r\n              <a href='mailto:confusion@food.net'>confusion@food.net</a>\r\n            </address>\r\n          </div>\r\n          <div className='col-12 col-sm-6 offset-sm-1'>\r\n            <h5>Map of our Location</h5>\r\n          </div>\r\n          <div className='col-12 col-sm-11 offset-sm-1'>\r\n            <div className='btn-group' role='group'>\r\n              <a\r\n                role='button'\r\n                className='btn btn-primary'\r\n                href='tel:+85212345678'\r\n              >\r\n                <i className='fa fa-phone'></i> Call\r\n              </a>\r\n              <a href='/' role='button' className='btn btn-info'>\r\n                <i className='fa fa-skype'></i> Skype\r\n              </a>\r\n              <a\r\n                role='button'\r\n                className='btn btn-success'\r\n                href='mailto:confusion@food.net'\r\n              >\r\n                <i className='fa fa-envelope-o'></i> Email\r\n              </a>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className='row row-content'>\r\n          <div className='col-12'>\r\n            <h3>Send us your Feedback</h3>\r\n          </div>\r\n          <div className='col-12 col-md-9'>\r\n            <Form model=\"feedback\" onSubmit={values => this.handleSubmit(values)}>\r\n              <Row className='form-group'>\r\n                <Label htmlFor='firstname' md={2}>\r\n                  First Name\r\n                </Label>\r\n                <Col md={10}>\r\n                  <Control.text\r\n                    model='.firstname'\r\n                    id='firstname'\r\n                    name='firstname'\r\n                    className='form-control'\r\n                    placeholder='First Name'\r\n                    validators={{\r\n                      required,\r\n                      minLength: minLength(3),\r\n                      maxLength: maxLength(15)\r\n                    }}\r\n                  />\r\n                  <Errors\r\n                    className='text-danger'\r\n                    model='.firstname'\r\n                    show='touched'\r\n                    messages={{\r\n                      required: 'Required',\r\n                      minLength: 'Must be greater than 2 characters',\r\n                      maxLength: 'Must be 15 characters or less'\r\n                    }}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <Row className='form-group'>\r\n                <Label htmlFor='lastname' md={2}>\r\n                  Last Name\r\n                </Label>\r\n                <Col md={10}>\r\n                  <Control.text\r\n                    model='.lastname'\r\n                    id='lastname'\r\n                    name='lastname'\r\n                    className='form-control'\r\n                    placeholder='Last Name'\r\n                    validators={{\r\n                      required,\r\n                      minLength: minLength(3),\r\n                      maxLength: maxLength(15)\r\n                    }}\r\n                  />\r\n                  <Errors\r\n                    className='text-danger'\r\n                    model='.lastname'\r\n                    show='touched'\r\n                    messages={{\r\n                      required: 'Required',\r\n                      minLength: 'Must be greater than 2 characters',\r\n                      maxLength: 'Must be 15 characters or less'\r\n                    }}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <Row className='form-group'>\r\n                <Label htmlFor='telnum' md={2}>\r\n                  Contact Tel.\r\n                </Label>\r\n                <Col md={10}>\r\n                  <Control.text\r\n                    model='.telnum'\r\n                    id='telnum'\r\n                    name='telnum'\r\n                    className='form-control'\r\n                    placeholder='Tel. number'\r\n                    validators={{\r\n                      required,\r\n                      minLength: minLength(3),\r\n                      maxLength: maxLength(15),\r\n                      isNumber\r\n                    }}\r\n                  />\r\n                  <Errors\r\n                    className='text-danger'\r\n                    model='.telnum'\r\n                    show='touched'\r\n                    messages={{\r\n                      required: 'Required',\r\n                      minLength: 'Must be greater than 2 numbers',\r\n                      maxLength: 'Must be 15 numbers or less',\r\n                      isNumber: 'Must be a number'\r\n                    }}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <Row className='form-group'>\r\n                <Label htmlFor='email' md={2}>\r\n                  Email\r\n                </Label>\r\n                <Col md={10}>\r\n                  <Control.text\r\n                    model='.email'\r\n                    id='email'\r\n                    name='email'\r\n                    className='form-control'\r\n                    placeholder='Email'\r\n                    validators={{\r\n                      required,\r\n                      validEmail\r\n                    }}\r\n                  />\r\n                  <Errors\r\n                    className='text-danger'\r\n                    model='.email'\r\n                    show='touched'\r\n                    messages={{\r\n                      required: 'Required',\r\n                      validEmail: 'Invalid Email Address'\r\n                    }}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <Row className='form-group'>\r\n                <Col md={{ size: 6, offset: 2 }}>\r\n                  <Row className='form-group'>\r\n                    <Label check>\r\n                      <Control.checkbox\r\n                        model='.agree'\r\n                        name='agree'\r\n                        className='form-control'\r\n                      />{' '}\r\n                      <strong>May we contact you?</strong>\r\n                    </Label>\r\n                  </Row>\r\n                </Col>\r\n                <Col md={{ size: 3, offset: 1 }}>\r\n                  <Control.select\r\n                    model='.contactType'\r\n                    name='contactType'\r\n                    className='form-control'\r\n                  >\r\n                    <option>Tel.</option>\r\n                    <option>Email</option>\r\n                  </Control.select>\r\n                </Col>\r\n              </Row>\r\n              <Row className='form-group'>\r\n                <Label htmlFor='message' md={2}>\r\n                  Your Feedback\r\n                </Label>\r\n                <Col md={10}>\r\n                  <Control.textarea\r\n                    model='.message'\r\n                    id='message'\r\n                    name='message'\r\n                    className='form-control'\r\n                    rows='12'\r\n                  ></Control.textarea>\r\n                </Col>\r\n              </Row>\r\n              <Row className='form-group'>\r\n                <Col md={{ size: 10, offset: 2 }}>\r\n                  <Button type='submit' color='primary'>\r\n                    Send Feedback\r\n                  </Button>\r\n                </Col>\r\n              </Row>\r\n            </Form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Contact\r\n","import React, { Component } from 'react'\r\nimport {\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  Label,\r\n  Row,\r\n  Col\r\n} from 'reactstrap'\r\nimport { Control, LocalForm, Errors } from 'react-redux-form'\r\n\r\nconst maxLength = len => val => !val || val.length <= len\r\nconst minLength = len => val => val && val.length >= len\r\n\r\nclass CommentForm extends Component {\r\n  constructor (props) {\r\n    super(props)\r\n    this.state = {\r\n      isModalOpen: false\r\n    }\r\n\r\n    this.handleSubmit = this.handleSubmit.bind(this)\r\n    this.toggleModal = this.toggleModal.bind(this)\r\n  }\r\n\r\n  handleSubmit (values) {\r\n    this.toggleModal();  // To close the modal on click ofok button of the alert\r\n    // // console.log('Current State is: ' + JSON.stringify(values))\r\n    // // alert('Current State is: ' + JSON.stringify(values))\r\n    this.props.postComment(this.props.dishId,values.rating,values.author,values.comment) \r\n    // onclick of submit button the addComment action is called, then it invokes the comment reducer with \r\n    // related case type and returns the associated new state with newly added comment \r\n  }\r\n\r\n  toggleModal () {\r\n    this.setState({\r\n      isModalOpen: !this.state.isModalOpen\r\n    })\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <div className='container'>\r\n        <div className='row'>\r\n          <Button outline onClick={this.toggleModal}>\r\n            <span className='fa fa-pencil'></span> Submit Comment\r\n          </Button>\r\n        </div>\r\n        <div className='row'>\r\n          <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n            <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\r\n            <ModalBody>\r\n              <LocalForm onSubmit={values => this.handleSubmit(values)}>\r\n                <Row className='form-group'>\r\n                  <Label htmlFor='rating' md={12}>\r\n                    Rating\r\n                  </Label>\r\n                  <Col md={12}>\r\n                    <Control.select\r\n                      model='.rating'\r\n                      id='rating'\r\n                      name='rating'\r\n                      className='form-control'\r\n                    >\r\n                      <option>1</option>\r\n                      <option>2</option>\r\n                      <option>3</option>\r\n                      <option>4</option>\r\n                      <option>5</option>\r\n                    </Control.select>\r\n                  </Col>\r\n                </Row>\r\n                <Row className='form-group'>\r\n                  <Label htmlFor='author' md={12}>\r\n                    Your Name\r\n                  </Label>\r\n                  <Col md={12}>\r\n                    <Control.text\r\n                      model='.author'\r\n                      id='author'\r\n                      name='author'\r\n                      className='form-control'\r\n                      placeholder='Author'\r\n                      validators={{\r\n                        minLength: minLength(3),\r\n                        maxLength: maxLength(15)\r\n                      }}\r\n                    />\r\n                    <Errors\r\n                      className='text-danger'\r\n                      model='.author'\r\n                      show='touched'\r\n                      messages={{\r\n                        minLength: 'Must be greater than 2 characters',\r\n                        maxLength: 'Must be 15 characters or less'\r\n                      }}\r\n                    />\r\n                  </Col>\r\n                </Row>\r\n                <Row className='form-group'>\r\n                  <Label htmlFor='comment' md={12}>\r\n                    Comment\r\n                  </Label>\r\n                  <Col md={12}>\r\n                    <Control.textarea\r\n                      model='.comment'\r\n                      id='comment'\r\n                      name='comment'\r\n                      className='form-control'\r\n                      rows='6'\r\n                    ></Control.textarea>\r\n                  </Col>\r\n                </Row>\r\n                <Row className='form-group'>\r\n                  <Col>\r\n                    <Button type='submit' color='primary'>\r\n                      Submit\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n              </LocalForm>\r\n            </ModalBody>\r\n          </Modal>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default CommentForm\r\n","import React from 'react'\r\nimport {\r\n  Card,\r\n  CardImg,\r\n  CardText,\r\n  CardBody,\r\n  CardTitle,\r\n  Breadcrumb,\r\n  BreadcrumbItem\r\n} from 'reactstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport CommentForm from \"./CommentForm\"\r\nimport { Loading } from './LoadingComponent';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\r\n\r\nfunction RenderDish ({ dish, isLoading, errMess }) {\r\n  if (isLoading) {\r\n    return (\r\n      <div className='container'>\r\n        <div className='row'>\r\n          <Loading />\r\n        </div>\r\n      </div>\r\n    )\r\n  } else if (errMess) {\r\n    return (\r\n      <div className='container'>\r\n        <div className='row'>\r\n          <h4>{errMess}</h4>\r\n        </div>\r\n      </div>\r\n    )\r\n  } else if (dish) {\r\n    return (\r\n      <FadeTransform\r\n                in\r\n                transformProps={{\r\n                    exitTransform: 'scale(0.5) translateY(-50%)'\r\n                }}>\r\n                <Card>\r\n                  <CardImg top src={baseUrl + dish.image} alt={dish.name} />\r\n                  <CardBody>\r\n                    <CardTitle>{dish.name}</CardTitle>\r\n                    <CardText>{dish.description}</CardText>\r\n                  </CardBody>\r\n                </Card>\r\n      </FadeTransform>\r\n    )\r\n  } else {\r\n    return <div></div>\r\n  }\r\n}\r\n\r\n\r\nfunction RenderComments ({ comments , postComment , dishId}) {\r\n  return (\r\n    <div>\r\n      <h4>Comments</h4>\r\n      <Stagger in>\r\n          {comments.map(comment => {\r\n            return (\r\n              <Fade in key={comment.id}>\r\n                  <ul className='list-unstyled' key={comment.id}>\r\n                    <li>{comment.comment}</li>\r\n                    <li>\r\n                      -- {comment.author} &nbsp;\r\n                      {new Intl.DateTimeFormat('en-US', {\r\n                        year: 'numeric',\r\n                        month: 'short',\r\n                        day: '2-digit'\r\n                      }).format(new Date(Date.parse(comment.date)))}\r\n                    </li>\r\n                  </ul>\r\n              </Fade>\r\n            )\r\n          })}\r\n      </Stagger>\r\n      <CommentForm postComment={postComment} dishId={dishId}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst DishDetail = props => {\r\n  return (\r\n    <div className='container'>\r\n      <div className='row'>\r\n        <Breadcrumb>\r\n          <BreadcrumbItem>\r\n            <Link to='/menu'>Menu</Link>\r\n          </BreadcrumbItem>\r\n          <BreadcrumbItem active>{props.dish ? props.dish.name : \"\"}</BreadcrumbItem>\r\n        </Breadcrumb>\r\n        <div className='col-12'>\r\n          <h3>{props.dish ? props.dish.name : \"\"}</h3>\r\n          <hr />\r\n        </div>\r\n      </div>\r\n      <div className='row'>\r\n        <div className='col-12 col-md-5 m-1'>\r\n          <RenderDish dish={props.dish} isLoading={props.isLoading} errMess={props.errMess}/>\r\n        </div>\r\n        <div className='col-12 col-md-5 m-1'>\r\n          {props.comments && props.dish? (\r\n            <RenderComments comments={props.comments} postComment={props.postComment} dishId={props.dish.id}/>\r\n          ) : (\r\n            <div></div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default DishDetail\r\n","import React from 'react'\r\nimport {\r\n  Breadcrumb,\r\n  BreadcrumbItem,\r\n  Card,\r\n  CardBody,\r\n  CardHeader,\r\n  Media\r\n} from 'reactstrap'\r\nimport { Link } from 'react-router-dom'\r\nimport {Loading} from \"./LoadingComponent\"\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport { Fade, Stagger } from 'react-animation-components';\r\n\r\nfunction RenderLeader ({ leader }) {\r\n  if(leader.isLoading){\r\nreturn <Loading />\r\n  }\r\n  else if(leader.errorMessage){\r\nreturn <h4>{leader.errorMessage}</h4>\r\n  }\r\n  else{\r\n    return(\r\n        <Stagger in>\r\n        {\r\n          leader.leaders.map(lead => {\r\n           return (\r\n              <Fade in key={lead.id}>\r\n                  <Media key={lead.id}>\r\n                    <Media left className='m-3'>\r\n                      <Media object src={baseUrl + lead.image} alt={lead.name} />\r\n                    </Media>\r\n                    <Media body>\r\n                      <Media heading>{lead.name}</Media>\r\n                      <p>{lead.designation}</p>\r\n                      <p>{lead.description}</p>\r\n                    </Media>\r\n                  </Media>\r\n              </Fade>)\r\n              })\r\n        }\r\n        </Stagger>\r\n    )\r\n  }\r\n}\r\n\r\nfunction About (props) {\r\n  return (\r\n    <div className='container'>\r\n      <div className='row'>\r\n        <Breadcrumb>\r\n          <BreadcrumbItem>\r\n            <Link to='/home'>Home</Link>\r\n          </BreadcrumbItem>\r\n          <BreadcrumbItem active>About Us</BreadcrumbItem>\r\n        </Breadcrumb>\r\n        <div className='col-12'>\r\n          <h3>About Us</h3>\r\n          <hr />\r\n        </div>\r\n      </div>\r\n      <div className='row row-content'>\r\n        <div className='col-12 col-md-6'>\r\n          <h2>Our History</h2>\r\n          <p>\r\n            Started in 2010, Ristorante con Fusion quickly established itself as\r\n            a culinary icon par excellence in Hong Kong. With its unique brand\r\n            of world fusion cuisine that can be found nowhere else, it enjoys\r\n            patronage from the A-list clientele in Hong Kong. Featuring four of\r\n            the best three-star Michelin chefs in the world, you never know what\r\n            will arrive on your plate the next time you visit us.\r\n          </p>\r\n          <p>\r\n            The restaurant traces its humble beginnings to{' '}\r\n            <em>The Frying Pan</em>, a successful chain started by our CEO, Mr.\r\n            Peter Pan, that featured for the first time the world's best\r\n            cuisines in a pan.\r\n          </p>\r\n        </div>\r\n        <div className='col-12 col-md-5'>\r\n          <Card>\r\n            <CardHeader className='bg-primary text-white'>\r\n              Facts At a Glance\r\n            </CardHeader>\r\n            <CardBody>\r\n              <dl className='row p-1'>\r\n                <dt className='col-6'>Started</dt>\r\n                <dd className='col-6'>3 Feb. 2013</dd>\r\n                <dt className='col-6'>Major Stake Holder</dt>\r\n                <dd className='col-6'>HK Fine Foods Inc.</dd>\r\n                <dt className='col-6'>Last Year's Turnover</dt>\r\n                <dd className='col-6'>$1,250,375</dd>\r\n                <dt className='col-6'>Employees</dt>\r\n                <dd className='col-6'>40</dd>\r\n              </dl>\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n        <div className='col-12'>\r\n          <Card>\r\n            <CardBody className='bg-faded'>\r\n              <blockquote className='blockquote'>\r\n                <p className='mb-0'>\r\n                  You better cut the pizza in four pieces because I'm not hungry\r\n                  enough to eat six.\r\n                </p>\r\n                <footer className='blockquote-footer'>\r\n                  Yogi Berra,\r\n                  <cite title='Source Title'>\r\n                    The Wit and Wisdom of Yogi Berra, P. Pepe, Diversion Books,\r\n                    2014\r\n                  </cite>\r\n                </footer>\r\n              </blockquote>\r\n            </CardBody>\r\n          </Card>\r\n        </div>\r\n      </div>\r\n      <div className='row row-content'>\r\n        <div className='col-12'>\r\n          <h2>Corporate Leadership</h2>\r\n        </div>\r\n        <div className='col-12'>\r\n          <RenderLeader leader={props.leaders} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default About\r\n","import React, { Component } from 'react'\r\nimport Menu from './MenuComponent'\r\nimport Home from \"./HomeComponent\"\r\nimport Header from \"./HeaderComponent\"\r\nimport Footer from \"./FooterComponent\"\r\nimport Contact from \"./ContactComponent\"\r\nimport DishDetail from \"./DishDetailComponent\"\r\nimport About from \"./AboutComponent\"\r\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport {postComment , fetchDishes, fetchComments, fetchPromos, fetchLeaders, postFeedback} from '../redux/ActionCreators'\r\nimport { actions } from 'react-redux-form';\r\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\r\nimport \"../../src/App.css\"\r\n\r\n//once we connect the mapStateToProps to the component with connect(), mapStateToProps gets state as an argument\r\nconst mapStateToProps = state => {\r\n  return {\r\n    dishes: state.dishes, // entire dishes state object is avaliable, to access individual properties (dishes.isLoading,dishes.errorMessage,dishes.dishes)\r\n    comments: state.comments,\r\n    promotions: state.promotions,\r\n    leaders: state.leaders\r\n  }\r\n}\r\n\r\n//once we connect mapDispatchToProps to component with connect(),mapDispatchToProps gets dispatch as an argument\r\nconst mapDispatchToProps = dispatch => ({\r\n  postComment: (dishId, rating, author, comment) =>\r\n    dispatch(postComment(dishId, rating, author, comment)) , \r\n  resetFeedbackForm: () => { dispatch(actions.reset('feedback'))},\r\n  fetchDishes: () => dispatch(fetchDishes()),\r\n  fetchComments:()=>dispatch(fetchComments()),\r\n  fetchPromos:()=>dispatch(fetchPromos()),\r\n  fetchLeaders:()=>dispatch(fetchLeaders()),\r\n  postFeedback:(feedback) => dispatch(postFeedback(feedback))\r\n})\r\n\r\nclass Main extends Component {\r\n  constructor (props) {\r\n    super(props)\r\n    this.state = {\r\n    }\r\n  }\r\n\r\n  // onDishSelect (dishId) {\r\n  //   this.setState({ selectedDish: dishId })\r\n  // }\r\n\r\n  //This life cycle method is called immediately after component ismounted in DOM\r\n  componentDidMount(){\r\n    this.props.fetchDishes();\r\n    this.props.fetchComments();\r\n    this.props.fetchPromos();\r\n    this.props.fetchLeaders();\r\n  }\r\n\r\n  render () {\r\n      const HomePage = () => {\r\n      return(\r\n          <Home dish={this.props.dishes.dishes.filter((dish)=>dish.featured)[0]}\r\n          dishesLoading={this.props.dishes.isLoading}\r\n          dishesErrMess={this.props.dishes.errorMessage}\r\n          promotion={this.props.promotions.promotions.filter((promo)=>promo.featured)[0]}\r\n          promosLoading={this.props.promotions.isLoading}\r\n          promosErrMess={this.props.promotions.errorMessage}\r\n          leader={this.props.leaders.leaders.filter((leader) => leader.featured)[0]}\r\n          leadersLoading={this.props.leaders.isLoading}\r\n          leadersErrMess={this.props.leaders.errorMessage}\r\n          />\r\n      );\r\n    }\r\n\r\n    const DishWithId = ({match}) => {\r\n      return(\r\n          <DishDetail dish={this.props.dishes.dishes.filter((dish) => dish.id === parseInt(match.params.dishId,10))[0]}\r\n            isLoading={this.props.dishes.isLoading}\r\n            errMess={this.props.dishes.errorMessage} \r\n            comments={this.props.comments.comments.filter((comment) => comment.dishId === parseInt(match.params.dishId,10))} \r\n            commentsErrMess={this.props.comments.errMess}\r\n            postComment={this.props.postComment} // add the props for new comments to DishDetail component for further handling\r\n            />\r\n      );\r\n    };\r\n\r\n    return (\r\n      <div>\r\n        <Header/>\r\n        <TransitionGroup>\r\n          <CSSTransition key={this.props.location.key} classNames=\"page\" timeout={300}>\r\n            <Switch location={this.props.location}>\r\n            <Route path='/home' component={HomePage} />\r\n            <Route exact path='/menu' component={() => <Menu dishes={this.props.dishes} />} />\r\n            <Route path='/menu/:dishId' component={DishWithId} />\r\n            {/**\r\n            * <Route path='/menu/:dishId' component={DishWithId} /> -- here dishId is route parameter and in the DishWithId function we use the match\r\n            * parameter from the router and access the id of selected dish (dishId)\r\n            */}\r\n            <Route exact path=\"/contactus\" component={() =><Contact resetFeedbackForm={this.props.resetFeedbackForm} postFeedback={this.props.postFeedback}/>}/>\r\n            <Route exact path=\"/aboutus\" component={()=><About leaders={this.props.leaders}/>}/>\r\n            <Redirect to=\"/home\" />\r\n            </Switch>\r\n          </CSSTransition>\r\n        </TransitionGroup>\r\n        <Footer/>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps,mapDispatchToProps)(Main));","import * as ActionTypes from './ActionTypes'\r\nimport { baseUrl } from '../shared/baseUrl';\r\n\r\n//addComment is an action which is being created to add the new comment related to a particular dish to it's\r\n// earlier set of comments. Whenweneed to add a new comment we need it's dishId, rating,author and comment\r\n// hence we send these as parameters to the addComment and also these are the payload object item,because\r\n//payload defines the data to be utilized from an action.\r\n//Since this action is related to comments, it will act only on comment reducer\r\n/** commenting this action as we are using the new action as shown below for displaying updated list of comments\r\nexport const addComment = (dishId, rating, author, comment) => ({\r\n  type: ActionTypes.ADD_COMMENT,\r\n  payload: {\r\n    dishId: dishId,\r\n    rating: rating,\r\n    author: author,\r\n    comment: comment\r\n  }\r\n})\r\n*/\r\n\r\nexport const addComment = (comment) => ({\r\n  type: ActionTypes.ADD_COMMENT,\r\n  payload: comment\r\n})\r\n\r\n// To display the error message when comments loading fails\r\nexport const commentsFailed= (errorMessage) =>({\r\n  type:ActionTypes.COMMENTS_FAILED,\r\n  payload:errorMessage\r\n})\r\n\r\n//To add the comments\r\nexport const addComments =(comments) =>({\r\n  type:ActionTypes.ADD_COMMENTS,\r\n  payload:comments\r\n})\r\n\r\n//Thunk used to fetch comments\r\nexport const fetchComments =()=> (dispatch)=>{\r\n  return fetch(baseUrl+\"comments\")\r\n  .then(response=>{\r\n    if(response.ok){\r\n      return response;\r\n    }\r\n    else{\r\n      var error = new Error('Error ' + response.status + ': ' + response.statusText)\r\n      error.response=response\r\n      throw error\r\n    }\r\n  },\r\n  error=>{\r\n    var errmess = new Error(error.message);\r\n    throw errmess;\r\n  })\r\n  .then(response=>response.json())\r\n  .then(comments=>dispatch(addComments(comments)))\r\n  .catch(error => dispatch(commentsFailed(error.message)));\r\n}\r\n\r\n//Thunk used for posting new comment to the server\r\nexport const postComment =(dishId, rating, author, comment) => (dispatch) =>{\r\n const newComment ={\r\n        dishId: dishId,\r\n        rating: rating,\r\n        author: author,\r\n        comment: comment\r\n }\r\n newComment.date = new Date().toISOString();\r\n return fetch(baseUrl + 'comments',{\r\n        method: \"POST\",\r\n        body: JSON.stringify(newComment),\r\n        headers: {\r\n          \"Content-Type\": \"application/json\"\r\n        },\r\n        credentials: \"same-origin\"\r\n })\r\n .then(response => {\r\n        if (response.ok) {\r\n          return response;\r\n        } else {\r\n          var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n          error.response = response;\r\n          throw error;\r\n        }\r\n      },\r\n      error => {\r\n            throw error;\r\n      })\r\n  .then(response=>response.json())\r\n  .then(response => dispatch(addComment(response)))\r\n  .catch(error =>  { console.log('post comments', error.message); alert('Your comment could not be posted\\nError: '+error.message); });\r\n}\r\n\r\n//For loading the dishes\r\nexport const dishesLoading =()=>({\r\n  type:ActionTypes.DISHES_LOADING\r\n})\r\n\r\n// To display the error message when loading fails\r\nexport const dishesFailed= (errorMessage) =>({\r\n  type:ActionTypes.DISHES_FAILED,\r\n  payload:errorMessage\r\n})\r\n\r\n//To add the dishes\r\nexport const addDishes =(dishes) =>({\r\n  type:ActionTypes.ADD_DISHES,\r\n  payload:dishes\r\n})\r\n\r\n//This is a thunk, which is used to fetch dishes\r\nexport const fetchDishes = () => dispatch => {\r\n  // when fetchDishes is called the firstly dishes start loading and the after 2 seconds addDishes is called\r\n\r\n  dispatch(dishesLoading(true)) \r\n\r\n  /**This set time out was used to add a delay while using data from .js file to replicate the scenario of server data fetch \r\n  Now since we are using json-server, lets comment this setTimeout function*/\r\n    // setTimeout(() => {\r\n    //   dispatch(addDishes(DISHES))\r\n    // }, 2000)\r\n\r\n  return fetch(baseUrl+ \"dishes\") // use the fetch() function to specify the Url\r\n  .then(response=>{\r\n    if(response.ok){\r\n      return response;\r\n    }\r\n    else{\r\n      var error = new Error('Error ' + response.status + ': ' + response.statusText)\r\n      error.response=response\r\n      throw error\r\n    }\r\n  },\r\n  error=>{\r\n    var errmess = new Error(error.message);\r\n    throw errmess;\r\n  })\r\n  .then(response=> response.json()) // \r\n  .then(dishes => dispatch(addDishes(dishes)))\r\n  .catch(error => dispatch(dishesFailed(error.message)));\r\n}\r\n\r\n//for loading promotions\r\nexport const promosLoading = () => ({\r\n    type: ActionTypes.PROMOS_LOADING\r\n});\r\n\r\n//when loading/fetching of promotions fail\r\nexport const promosFailed = (errorMessage) => ({\r\n    type: ActionTypes.PROMOS_FAILED,\r\n    payload: errorMessage\r\n});\r\n\r\n//add promotions to UI\r\nexport const addPromos = (promos) => ({\r\n    type: ActionTypes.ADD_PROMOS,\r\n    payload: promos\r\n});\r\n\r\n//Thunk used to fetch promotions\r\nexport const fetchPromos =()=> (dispatch)=>{\r\n  dispatch(promosLoading(true))\r\n  return fetch(baseUrl+\"promotions\")\r\n  .then(response=>{\r\n    if(response.ok){\r\n      return response;\r\n    }\r\n    else{\r\n      var error = new Error('Error ' + response.status + ': ' + response.statusText)\r\n      error.response=response\r\n      throw error\r\n    }\r\n  },\r\n  error=>{\r\n    var errmess = new Error(error.message);\r\n    throw errmess;\r\n  })\r\n  .then(response=>response.json())\r\n  .then(promos=>dispatch(addPromos(promos)))\r\n  .catch(error => dispatch(promosFailed(error.message)));\r\n}\r\n\r\n//LEADERS\r\n//for loading leaders\r\nexport const leadersLoading = () => ({\r\n    type: ActionTypes.LEADERS_LOADING\r\n});\r\n\r\n//when loading/fetching of leaders fail\r\nexport const leadersFailed = (errorMessage) => ({\r\n    type: ActionTypes.LEADERS_FAILED,\r\n    payload: errorMessage\r\n});\r\n\r\n//add leaders to UI\r\nexport const addLeaders = (leaders) => ({\r\n    type: ActionTypes.ADD_LEADERS,\r\n    payload: leaders\r\n});\r\n\r\n//Thunk used to fetch leaders\r\nexport const fetchLeaders =()=> (dispatch)=>{\r\n  dispatch(leadersLoading(true))\r\n  return fetch(baseUrl+\"leaders\")\r\n  .then(response=>{\r\n    if(response.ok){\r\n      return response;\r\n    }\r\n    else{\r\n      var error = new Error('Error ' + response.status + ': ' + response.statusText)\r\n      error.response=response\r\n      throw error\r\n    }\r\n  },\r\n  error=>{\r\n    var errmess = new Error(error.message);\r\n    throw errmess;\r\n  })\r\n  .then(response=>response.json())\r\n  .then(leaders=>dispatch(addLeaders(leaders)))\r\n  .catch(error => dispatch(leadersFailed(error.message)));\r\n}\r\n\r\n//Thunk used for posting feedback to the server\r\nexport const postFeedback = (feedback) => (dispatch) =>{\r\n    return fetch(baseUrl + 'feedback',{\r\n          method: \"POST\",\r\n          body: JSON.stringify(feedback),\r\n          headers: {\r\n            \"Content-Type\": \"application/json\"\r\n          },\r\n          credentials: \"same-origin\"\r\n    })\r\n    .then(response => {\r\n            if (response.ok) {\r\n              return response;\r\n            } else {\r\n              var error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n              error.response = response;\r\n              throw error;\r\n            }\r\n          },\r\n          error => {\r\n                throw error;\r\n          })\r\n      .then(response=>response.json())\r\n      .then(response => alert(\"Thank you for your feedback!\\n\" + JSON.stringify(response)))\r\n      .catch(error =>  { console.log('post comments', error.message); alert('Your comment could not be posted\\nError: '+error.message); });\r\n\r\n}\r\n\r\n","// This file is used to define the type parameter of actions\r\n\r\n//Comments\r\nexport const ADD_COMMENT = 'ADD_COMMENT'  // TO add the comment to the particular dish through submit comment form\r\nexport const ADD_COMMENTS = 'ADD_COMMENTS'; // To add comments from server to UI\r\nexport const COMMENTS_FAILED = 'COMMENTS_FAILED'; // when comment loadng failsfrom server over UI\r\n/**In the comments we donot use COMMENTS_LOADING, because when component is mounted the comments are already\r\nloaded and we never encounter the scenario of COMMENTS_LOADING */\r\n\r\n//Dishes\r\nexport const DISHES_LOADING = 'DISHES_LOADING'; // show loading when dishes are being fetched from server\r\nexport const DISHES_FAILED = 'DISHES_FAILED'; // fetching of dishes failed \r\nexport const ADD_DISHES = 'ADD_DISHES'; // add dishes from server to UI\r\n\r\n//Promotions\r\nexport const PROMOS_LOADING = 'PROMOS_LOADING';\r\nexport const ADD_PROMOS = 'ADD_PROMOS';\r\nexport const PROMOS_FAILED = 'PROMOS_FAILED';\r\n\r\n//Leaders\r\nexport const LEADERS_LOADING = 'LEADERS_LOADING';\r\nexport const ADD_LEADERS = 'ADD_LEADERS';\r\nexport const LEADERS_FAILED = 'LEADERS_FAILED';\r\n\r\n","// import { DISHES } from '../shared/dishes'\r\n// --- Remove this because earlier we were using this for initial state, but now we will provide the dishes data through action reducer\r\n\r\nimport * as ActionTypes from './ActionTypes'\r\n\r\nexport const Dishes = (\r\n  state = {\r\n    isLoading: true,\r\n    errorMessage: null,\r\n    dishes: []\r\n  },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case ActionTypes.ADD_DISHES:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        errorMessage: null,\r\n        dishes: action.payload\r\n      }\r\n    case ActionTypes.DISHES_LOADING:\r\n      return { ...state, isLoading: true, errorMessage: null, dishes: [] }\r\n    case ActionTypes.DISHES_FAILED:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        errorMessage: action.payload,\r\n        dishes: []\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n","import * as ActionTypes from './ActionTypes'\r\n\r\nexport const Comments = (state = {\r\n    errorMessage: null,\r\n    comments: []\r\n  }, action) => {\r\n  switch (action.type) {\r\n    case ActionTypes.ADD_COMMENTS:\r\n      return {...state, errorMessage: null, comments: action.payload};\r\n\r\n    case ActionTypes.COMMENTS_FAILED:\r\n      return {...state, errorMessage: action.payload};\r\n\r\n    case ActionTypes.ADD_COMMENT:\r\n      var comment = action.payload // we get the comments in the payload of action\r\n      // comment.id = state.length // when we add a new comment we need a new id for it, which is equal to state.length\r\n      // comment.date = new Date().toISOString() // when we add a newcomment we also need to display the date when comment was added\r\n      //return state.concat(comment) // To prevent the mutation of current/previous state we use concat() method, this method returns a new state object by appending the comments to the state\r\n      return {...state, comments:state.comments.concat(comment)}\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const Promotions = (state  = { isLoading: true,\r\n                                        errorMessage: null,\r\n                                        promotions:[]}, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_PROMOS:\r\n        return {...state, isLoading: false, errorMessage: null, promotions: action.payload};\r\n\r\n        case ActionTypes.PROMOS_LOADING:\r\n            return {...state, isLoading: true, errorMessage: null, promotions: []}\r\n\r\n        case ActionTypes.PROMOS_FAILED:\r\n            return {...state, isLoading: false, errorMessage: action.payload};\r\n\r\n        default:\r\n          return state;\r\n      }\r\n};","import * as ActionTypes from './ActionTypes'\r\n\r\nexport const Leaders = (\r\n  state = {\r\n    isLoading: true,\r\n    errorMessage: null,\r\n    leaders: []\r\n  },\r\n  action\r\n) => {\r\n  switch (action.type) {\r\n    case ActionTypes.ADD_LEADERS:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        errorMessage: null,\r\n        leaders: action.payload\r\n      }\r\n    case ActionTypes.LEADERS_LOADING:\r\n      return { ...state, isLoading: true, errorMessage: null, leaders: [] }\r\n    case ActionTypes.LEADERS_FAILED:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        errorMessage: action.payload,\r\n        leaders: []\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\n","export const InitialFeedback = {\r\n    firstname: '',\r\n    lastname: '',\r\n    telnum: '',\r\n    email: '',\r\n    agree: false,\r\n    contactType: 'Tel.',\r\n    message: ''\r\n};","import React, { Component } from 'react';\nimport Main from \"./components/MainComponent\";\nimport {BrowserRouter} from \"react-router-dom\"\nimport { Provider } from 'react-redux';\nimport { ConfigureStore } from './redux/configureStore';\n\nconst store = ConfigureStore();\n\nclass App extends Component {\n\trender() {\n\t\treturn (\n\t\t\t<Provider store={store}>\n\t\t\t\t<BrowserRouter>\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<Main/>\n\t\t\t\t\t</div>\n\t\t\t\t</BrowserRouter>\n\t\t\t</Provider>\n\t\t);\n\t}\n}\n\nexport default App;\n","import { createStore, combineReducers , applyMiddleware} from 'redux'\r\nimport { Dishes } from './dishes'\r\nimport { Comments } from './comments'\r\nimport { Promotions } from './promotions'\r\nimport { Leaders } from './leaders'\r\nimport thunk from \"redux-thunk\"\r\nimport logger from \"redux-logger\"\r\nimport { createForms } from 'react-redux-form';\r\nimport { InitialFeedback } from './Forms';\r\n\r\nexport const ConfigureStore = () => {\r\n  /**\r\n     * The below code was used earlier when we had written a single reducer \r\n     // const store = createStore(\r\n    //     Reducer, // reducer\r\n    //     initialState, // our initialState\r\n    // );\r\n     */\r\n\r\n  const store = createStore(\r\n    combineReducers({\r\n      dishes: Dishes,\r\n      comments: Comments,\r\n      promotions: Promotions,\r\n      leaders: Leaders,\r\n      ...createForms({\r\n        feedback: InitialFeedback\r\n      })\r\n    }),\r\n    applyMiddleware(thunk,logger)\r\n  )\r\n\r\n  return store\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'font-awesome/css/font-awesome.css';//npm install font awesome and import here\nimport 'bootstrap-social/bootstrap-social.css'; //npm install bootstrap and import here\nimport 'bootstrap/dist/css/bootstrap.min.css'; //npm install bootstrap and import here\nimport './index.css'; // index.css has high priority than bootstrap.css\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}